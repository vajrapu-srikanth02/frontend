# name: go lang

# on:
#   push:
#     branches:
#       - 'main'
#   pull_request:
#     branches:
#       - 'main'
  

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: setup go
#         uses: actions/setup-go@v5
#         with:
#           go-version: '1.22.5'
#       - run: go version

#       - name: build the application
#         run: go build -o frontned .

#       - name: Run Trivy vulnerability scanner
#         uses: aquasecurity/trivy-action@0.20.0
#         with:
#           scan-type: 'fs'
#           scan-ref: '.'
#           trivy-config: trivy.yaml
#       # - name: Trivy FS scan
#       #   run: |
#       #     trivy fs --format table -o fs.html .

#       # - name: SonarQube Scan
#       #   uses: sonarsource/sonarqube-scan-action@master
#       #   env:
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#       # - name: SonarQube Quality Gate check
#       #   id: sonarqube-quality-gate-check
#       #   uses: sonarsource/sonarqube-quality-gate-action@master
#       #   # Force to fail step after specific time.
#       #   timeout-minutes: 5
#       #   env:
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
      
#       - name: Build and push
#         run: |
#           docker build -t srikanthhg/frontend:${{ github.sha }} .
  
#       - name: Run Trivy vulnerability scanner
#         uses: aquasecurity/trivy-action@0.20.0
#         with:
#           image-ref: 'srikanthhg/frontend:${{ github.sha }}'
#           format: 'table'
#           output: 'trivy-image-report.html'
      
#       # - name: Trivy Image Scan
#       #   run: |
#       #     trivy image --format table -o trivy-image-report.html srikanthhg/frontend:${{ github.sha }}

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push Docker Image
#         run: |
#             docker push srikanthhg/frontend:${{ github.sha }}
